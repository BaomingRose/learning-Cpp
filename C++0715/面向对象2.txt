类和对象 --- 类中六个默认的成员函数
class Test	//空类
{}；
初始化和清理：	构造函数主要完成初始化工作
				析构函数主要完成清理工作
拷贝复制：		拷贝构造是使用同类对象初始化创建对象
				赋值重载主要使把一个对象赋值给另一个对象
取地址重载：	主要是普通对象和const对象取地址，这两个很少使用
	Date* operator&()
	{
		return this;
	}


构造函数：名字与类名相同，创建类类型对象时由编译器自动调用，保证每个对象都有一个
		初始值，并且在对象的生命周期只有一次

默认的构造函数：
1.如果用户没有显示实现任何构造函数，编译器将会生成默认构造函数
2.用户定义无参的构造函数
3.用户定义全缺省参数的构造函数

析构函数：
1.析构函数名时类名前加上字符~
2.无参数返回值
3.一个类有且只有一个析构函数。若未显示定义，系统将会生成默认的析构函数
4.对象生命周期结束后，C++编译系统自动调用析构函数


拷贝构造函数：单个形参，该形参是对本类类型对象的引用（一般常用const修饰）
				在用已存在对象创建新对象时由编译器自动调用
特征：
1.拷贝构造函数是构造函数的一个重载形式
2.拷贝函数的参数只有一个且必须使用引用传参，使用传值方式会引发无穷递归调用

若未显示定义，系统生成默认的拷贝构造函数。默认的拷贝构造函数对象按内存存储字节序完成拷贝，
	这种拷贝叫做浅拷贝，或者值拷贝。
	
	两个String类的对象s1, s2， s2是拷贝s1构造的，当s2释放的时候，s1的指针指向被s2释放，导致程序崩溃
	两个对象直接赋值：
	String s2("word");
	String s1("hello");
	s1 = s2；	默认的赋值：浅拷贝 + 内存泄漏("hello"的那片空间没有清理，而s1指针已经改变指向了)
	
运算符重载
运算符重载是具有特殊函数名的函数，也具有其返回值类型，
函数名字为：关键字operator 后面接需要重载的运算符符号
函数原型：返回值类型 operator操作符（参数列表）
注意：
1.不能通过连接其他符号来创建新的操作符：比如@
2.重载操作符必须有一个类类型或者枚举类型的操作数
3.用于内置类型的操作符，其含义不能改变，例如：内置的整型+， 不能改变其含义
4.作为类成员的重载函数时，其形参看起来比操作数数目少1成员函数的操作符有一个默认的形参this，
	限定为第一个形参
5.	.*	::	sizeof	?:	.	这5个运算符不能重载
	
	
